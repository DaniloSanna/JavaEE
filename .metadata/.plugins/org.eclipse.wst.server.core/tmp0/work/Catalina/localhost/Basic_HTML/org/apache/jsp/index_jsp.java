/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.13
 * Generated at: 2021-12-13 16:27:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"ISO-8859-1\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\n");
      out.write("<!-- Bootstrap CSS -->\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\"\n");
      out.write("	integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<title>Basic Java HTML</title>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("form {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 40%;\n");
      out.write("	left: 33%;\n");
      out.write("	right: 33%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h4 {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 30%;\n");
      out.write("	left: 33%;\n");
      out.write("	right: 33%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".msg {\n");
      out.write("	color: red;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<h4>Curso JSP</h4>\n");
      out.write("\n");
      out.write("	<form action=\"ServletLogin\" method=\"post\"\n");
      out.write("		class=\"row g-3 needs-validation\">\n");
      out.write("		<input type=\"hidden\" value=\"");
      out.print(request.getParameter("url"));
      out.write("\"\n");
      out.write("			name=\"url\">\n");
      out.write("\n");
      out.write("		<div class=\"col-md-6\">\n");
      out.write("			<label class=\"form-label\">Login:</label> <input name=\"login\"\n");
      out.write("				type=\"text\" class=\"form-control\" required>\n");
      out.write("			<div class=\"invalid-feedback\">Provide a valid login</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"col-md-6\">\n");
      out.write("			<label class=\"form-label\">Password:</label> <input name=\"pass\"\n");
      out.write("				type=\"password\" class=\"form-control\" id=\"inputPassword4\" required>\n");
      out.write("			<div class=\"invalid-feedback\">Provide a valid password.</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<button type=\"submit\" class=\"btn btn-primary\">Send</button>\n");
      out.write("		<div class=\"col-12\">\n");
      out.write("			<h5 class=\"msg\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("		integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\n");
      out.write("		crossorigin=\"anonymous\">\n");
      out.write("		\n");
      out.write("	</script>\n");
      out.write("\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("		(function() {\n");
      out.write("			'use strict'\n");
      out.write("\n");
      out.write("			// Fetch all the forms we want to apply custom Bootstrap validation styles to\n");
      out.write("			var forms = document.querySelectorAll('.needs-validation')\n");
      out.write("\n");
      out.write("			// Loop over them and prevent submission\n");
      out.write("			Array.prototype.slice.call(forms).forEach(function(form) {\n");
      out.write("				form.addEventListener('submit', function(event) {\n");
      out.write("					if (!form.checkValidity()) {\n");
      out.write("						event.preventDefault()\n");
      out.write("						event.stopPropagation()\n");
      out.write("					}\n");
      out.write("\n");
      out.write("					form.classList.add('was-validated')\n");
      out.write("				}, false)\n");
      out.write("			})\n");
      out.write("		})()\n");
      out.write("	</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
